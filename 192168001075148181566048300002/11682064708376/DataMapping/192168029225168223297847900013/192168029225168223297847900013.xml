<?xml version="1.0" encoding="UTF-8"?>
<data>
    <AU_MAPPINGTRANSFORMATION>
        <au_optimizedLoading><![CDATA[1]]></au_optimizedLoading>
        <au_comments><![CDATA[null]]></au_comments>
        <au_enableAIMap><![CDATA[0]]></au_enableAIMap>
        <AU_REUSABLE><![CDATA[1]]></AU_REUSABLE>
        <au_previousVersion><![CDATA[]]></au_previousVersion>
        <au_mapXmlFile><![CDATA[<?xml version="1.0" encoding="UTF-8"?><maps version="4.4">
<mappingInformation>
<mappingVersion>6.1</mappingVersion>
<mappingName>Hackbarth_Mainfest_AXIS_Map</mappingName>
<mappingProject>Project:11682064708376</mappingProject>
<mappingDescription>Hackbarth</mappingDescription>
<sourceSchemaID>TextSchema:192168029225168223253030100006</sourceSchemaID>
<targetSchemaID>JSONSchema:192168029225168223258580900009</targetSchemaID>
<mappingOwnerGroup>Group_1</mappingOwnerGroup>
<mappingOwner>Rajat Saxena</mappingOwner>
<mappingLastModifiedBy>Rajat Saxena</mappingLastModifiedBy>
<mappingCreationDate>Sun Apr 23 12:26:18 IST 2023</mappingCreationDate>
<mappingModifiedDate>Sun Apr 23 12:41:05 IST 2023</mappingModifiedDate>
<reusable>null</reusable>
</mappingInformation>
<sourceRoots>
<sourceRoot>
<name>Root</name>
<schemaName>HB_CSV_Itemized_Layout_RR</schemaName>
<schemaID>TextSchema:192168029225168223253030100006</schemaID>
</sourceRoot>
</sourceRoots>
<targetRoots>
<targetRoot>
<name>Root</name>
<schemaName>HB_Json_Axis_Layout_RR</schemaName>
<schemaID>JSONSchema:192168029225168223258580900009</schemaID>
<stream>output_1</stream>
</targetRoot>
</targetRoots>
<nameSpace/>
<xslProperty/>
<GlobalPreCustomXSL/>
<GlobalPostCustomXSL/>
<xslTemplates>
<xslTemplate>
<template>
&lt;xsl:template name="RefNoTemplate"&gt;
&lt;xsl:param name="level"/&gt;
	&lt;xsl:param name="id"/&gt;
	&lt;!-- template code starts--&gt;&lt;xsl:choose&gt;&lt;xsl:when test="$level=2"&gt;&lt;xsl:value-of select="$id"/&gt;&lt;/xsl:when&gt;&lt;xsl:otherwise&gt;&lt;/xsl:otherwise&gt;&lt;/xsl:choose&gt;
	&lt;!-- template code ends--&gt;
&lt;/xsl:template&gt;
</template>
<mappingTemplate>
WHEN CONDITION{$level=2} VALUE=[$id ] OTHERWISE VALUE=[ ]
</mappingTemplate>
</xslTemplate>
<xslTemplate>
<template>
&lt;xsl:template name="MasterPackageRefNoTemplate"&gt;
&lt;xsl:param name="level"/&gt;
	&lt;xsl:param name="id"/&gt;
	&lt;!-- template code starts--&gt;&lt;xsl:choose&gt;&lt;xsl:when test="$level=1"&gt;&lt;xsl:value-of select="$id"/&gt;&lt;/xsl:when&gt;&lt;xsl:otherwise&gt;&lt;/xsl:otherwise&gt;&lt;/xsl:choose&gt;
	&lt;!-- template code ends--&gt;
&lt;/xsl:template&gt;
</template>
<mappingTemplate>
WHEN CONDITION{$level=1} VALUE=[$id ] OTHERWISE VALUE=[ ]
</mappingTemplate>
</xslTemplate>
</xslTemplates>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item</dest>
<preCustomXSL/>
<postCustomXSL/>
<mapValue/>
 <forEach>$Input_HB_CSV_Itemized_Layout_RR/Root/Record[level=2 and not(preceding::city=city and preceding::state=state and preceding::address=address and preceding::zip=zip)]</forEach>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="item">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/AccountNo</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>'Test'</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="AccountNo">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/AccountNo" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/Service</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>'Scheduled'</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="Service">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/Service" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/Vehicle</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>'Van'</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="Vehicle">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/Vehicle" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/CallerName</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>'OSM'</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="CallerName">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/CallerName" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/DeliveryAddress/Street</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>$Input_HB_CSV_Itemized_Layout_RR/Root/Record/address</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="Street">
<Position height="25" identify="&lt;S&gt;" label="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/address" mapString="&lt;S&gt;$Input_HB_CSV_Itemized_Layout_RR/Root/Record/address" x="100" y="20">
<SourceLines>
<Line x1="180" y1="32" x2="280" y2="32"/>
</SourceLines>
<TargetLines/>
</Position>
<Position height="25" identify="&lt;T&gt;" label="/Root/item/DeliveryAddress/Street" mapString="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/address" x="300" y="20">
<SourceLines/>
<TargetLines>
<Line x1="180" y1="32" x2="280" y2="32"/>
</TargetLines>
</Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/DeliveryAddress/City</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>$Input_HB_CSV_Itemized_Layout_RR/Root/Record/city</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="City">
<Position height="25" identify="&lt;S&gt;" label="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/city" mapString="&lt;S&gt;$Input_HB_CSV_Itemized_Layout_RR/Root/Record/city" x="100" y="20">
<SourceLines>
<Line x1="180" y1="32" x2="280" y2="32"/>
</SourceLines>
<TargetLines/>
</Position>
<Position height="25" identify="&lt;T&gt;" label="/Root/item/DeliveryAddress/City" mapString="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/city" x="300" y="20">
<SourceLines/>
<TargetLines>
<Line x1="180" y1="32" x2="280" y2="32"/>
</TargetLines>
</Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/DeliveryAddress/State</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>$Input_HB_CSV_Itemized_Layout_RR/Root/Record/state</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="State">
<Position height="25" identify="&lt;S&gt;" label="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/state" mapString="&lt;S&gt;$Input_HB_CSV_Itemized_Layout_RR/Root/Record/state" x="100" y="20">
<SourceLines>
<Line x1="180" y1="32" x2="280" y2="32"/>
</SourceLines>
<TargetLines/>
</Position>
<Position height="25" identify="&lt;T&gt;" label="/Root/item/DeliveryAddress/State" mapString="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/state" x="300" y="20">
<SourceLines/>
<TargetLines>
<Line x1="180" y1="32" x2="280" y2="32"/>
</TargetLines>
</Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/DeliveryAddress/Zip</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>$Input_HB_CSV_Itemized_Layout_RR/Root/Record/zip</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="Zip">
<Position height="25" identify="&lt;T&gt;" label="/Root/item/DeliveryAddress/Zip" mapString="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/zip" x="300" y="20">
<SourceLines/>
<TargetLines>
<Line x1="180" y1="32" x2="280" y2="32"/>
</TargetLines>
</Position>
<Position height="25" identify="&lt;S&gt;" label="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/zip" mapString="&lt;S&gt;$Input_HB_CSV_Itemized_Layout_RR/Root/Record/zip" x="100" y="20">
<SourceLines>
<Line x1="180" y1="32" x2="280" y2="32"/>
</SourceLines>
<TargetLines/>
</Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/OrderPackageItems/RefNo</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>$RefNoVar</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables>
<localVariable>
<lname>RefNoVar</lname>
<lvalue>CALL TEMPLATE NAME="RefNoTemplate" level~1="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level" id~2="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/id"</lvalue>
<lcomment/>
</localVariable>
</localVariables> <Sorting/>
 <Target name="RefNo">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/OrderPackageItems/RefNo" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/OrderPackageItems/MasterPackageRefNo</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>$MasterPackageRefNo</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables>
<localVariable>
<lname>MasterPackageRefNo</lname>
<lvalue>CALL TEMPLATE NAME="MasterPackageRefNoTemplate" level~1="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level" id~2="$Input_HB_CSV_Itemized_Layout_RR/Root/Record/id"</lvalue>
<lcomment/>
</localVariable>
</localVariables> <Sorting/>
 <Target name="MasterPackageRefNo">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/OrderPackageItems/MasterPackageRefNo" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/PickupTargetFrom</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+05,':', $Min,' ',$AmPm)</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables>
<localVariable>
<lname>Hour</lname>
<lvalue>substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,' ' ) , ':')</lvalue>
<lcomment/>
</localVariable>
<localVariable>
<lname>Min</lname>
<lvalue>substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,':')  ,' ')</lvalue>
<lcomment/>
</localVariable>
<localVariable>
<lname>AmPm</lname>
<lvalue>substring-after(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate , ':') , ' ')</lvalue>
<lcomment/>
</localVariable>
</localVariables> <Sorting/>
 <Target name="PickupTargetFrom">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/PickupTargetFrom" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/DeliveryTargetFrom</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+05,':', $Min,' ',$AmPm)</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables>
<localVariable>
<lname>Hour</lname>
<lvalue>substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,' ' ) , ':')</lvalue>
<lcomment/>
</localVariable>
<localVariable>
<lname>Min</lname>
<lvalue>substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,':')  ,' ')</lvalue>
<lcomment/>
</localVariable>
<localVariable>
<lname>AmPm</lname>
<lvalue>substring-after(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate , ':') , ' ')</lvalue>
<lcomment/>
</localVariable>
</localVariables> <Sorting/>
 <Target name="DeliveryTargetFrom">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/DeliveryTargetFrom" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/PickupTargetTo</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+08,':', $Min,' ',$AmPm)</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables>
<localVariable>
<lname>Hour</lname>
<lvalue>substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,' ' ) , ':')</lvalue>
<lcomment/>
</localVariable>
<localVariable>
<lname>Min</lname>
<lvalue>substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,':')  ,' ')</lvalue>
<lcomment/>
</localVariable>
<localVariable>
<lname>AmPm</lname>
<lvalue>substring-after(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate , ':') , ' ')</lvalue>
<lcomment/>
</localVariable>
</localVariables> <Sorting/>
 <Target name="PickupTargetTo">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/PickupTargetTo" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/DeliveryTargetTo</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+17,':', $Min,' ',$AmPm)</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables>
<localVariable>
<lname>Hour</lname>
<lvalue>substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,' ' ) , ':')</lvalue>
<lcomment/>
</localVariable>
<localVariable>
<lname>Min</lname>
<lvalue>substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,':')  ,' ')</lvalue>
<lcomment/>
</localVariable>
<localVariable>
<lname>AmPm</lname>
<lvalue>substring-after(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate , ':') , ' ')</lvalue>
<lcomment/>
</localVariable>
</localVariables> <Sorting/>
 <Target name="DeliveryTargetTo">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/DeliveryTargetTo" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<map>
<order>1</order>
 <targetName>HB_Json_Axis_Layout_RR</targetName>
<dest>/Root/item/OrderPackageItems/Weight</dest>
<preCustomXSL/>
<postCustomXSL/>
 <mapValue>IF CONDITION{$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level=2} VALUE=[$Input_HB_CSV_Itemized_Layout_RR/Root/Record/weight]
IF CONDITION{$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level=2 and $Input_HB_CSV_Itemized_Layout_RR/Root/Record/weight='' } VALUE=[ 0]</mapValue>
 <forEach/>
 <comments/>
<namespacePrefix/>

 <namespaceRemovePrefix>false</namespaceRemovePrefix>
<localVariables/>
 <Sorting/>
 <Target name="Weight">
      <Position height="25" identify="&lt;T&gt;" label="//Root/item/OrderPackageItems/Weight" mapString="" x="300" y="10">
          <SourceLines/>
          <TargetLines/>
     </Position>
</Target>
 </map>
<variables>
</variables>

<globalParameters>
<keys>
</keys>
<contextVariables>
</contextVariables>
</globalParameters>

<connections/>
<functions>
</functions>
<disableOutputNodes>
</disableOutputNodes>
<filters/>
<valuemapNodes/>
<accessLevel>
<valueMap>global</valueMap>
<globalTemplate>global</globalTemplate>
<customAutoMap>global</customAutoMap>
</accessLevel>
<DataViewerRecordCount>50</DataViewerRecordCount>
<isQuickSplittingEnabled>false</isQuickSplittingEnabled>
<sourceExtensions/>
<targetExtensions/>
<disableOutputNodes/>
<characterSetEncoding>UTF-8</characterSetEncoding>
<tipOfTheDay>true</tipOfTheDay>
<contextSchemaLoadedAtSource>false</contextSchemaLoadedAtSource>
<contextSchemaLoadedAtTarget>false</contextSchemaLoadedAtTarget>
<contextSchemaDefinition/>
<filterUnmappedElement>false</filterUnmappedElement>
<indentOutputXML>true</indentOutputXML>
<streamingMode>false</streamingMode>
<filterEmptyElements>false</filterEmptyElements>
<dbQueryCaching>false</dbQueryCaching>
<cacheIncludedSchemas>false</cacheIncludedSchemas>
<TreeExpandLevelCount>3</TreeExpandLevelCount>
<TreeExpandLevelCountForWebService>5</TreeExpandLevelCountForWebService>
<TreeExpandLevelForEasySchemaExtensions>10</TreeExpandLevelForEasySchemaExtensions>
<SelfRecursionLevel>0</SelfRecursionLevel>
<EnableTypesBuffering>true</EnableTypesBuffering>
<CdataSectionElements/>
<excludeResultPrefixes> saxonJavaMappingTransformation saxonJavaMapperQueryExecutor saxonJavaAggregateFunctionHandler str</excludeResultPrefixes>
<webservice>
<consumers/>
</webservice>

<CustomAutoMapInUse/>
<processElementFormDefault>true</processElementFormDefault>
<xslVersion2.0>false</xslVersion2.0>
<xslVersion3.0>false</xslVersion3.0>
<sourceXpath/>
<targetXpath/>
</maps>
]]></au_mapXmlFile>
        <au_sourceSchema><![CDATA[TextSchema:192168029225168223253030100006]]></au_sourceSchema>
        <au_persistDataEnabled><![CDATA[0]]></au_persistDataEnabled>
        <au_xslFile><![CDATA[<?xml version='1.0'?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.1" xmlns:saxonJavaMappingTransformation="java:com.adeptia.indigo.services.mapping.MappingTransformation" xmlns:saxonJavaMapperQueryExecutor="java:com.adeptia.indigo.services.mapping.support.dbquery.MapperQueryExecutor" xmlns:saxonJavaAggregateFunctionHandler="java:com.adeptia.indigo.services.mapping.AggregateFunctionHandler"  xmlns:str="http://exslt.org/strings" exclude-result-prefixes="saxonJavaMappingTransformation saxonJavaMapperQueryExecutor saxonJavaAggregateFunctionHandler str" xmlns:saxon="http://saxon.sf.net/" extension-element-prefixes="saxon">
<xsl:output method="xml" version="1.0" encoding="UTF-8" cdata-section-elements="" indent="yes" /><xsl:param name="_userName"/><xsl:param name="_password"/><xsl:param name="_class"/><xsl:param name="_identifier"/><xsl:param name="_subject"/><xsl:param name="_repositoryPath"/><xsl:param name="_Input1"/> <xsl:variable name="varConn" select="saxonJavaMapperQueryExecutor:getInstance($_identifier,'false')"/> <xsl:variable name="apos">'</xsl:variable> <xsl:variable name="quot">"</xsl:variable><xsl:template name="RefNoTemplate">
<xsl:param name="level"/>
	<xsl:param name="id"/>
	<!-- template code starts--><xsl:choose><xsl:when test="$level=2"><xsl:value-of select="$id"/></xsl:when><xsl:otherwise></xsl:otherwise></xsl:choose>
	<!-- template code ends-->
</xsl:template><xsl:template name="MasterPackageRefNoTemplate">
<xsl:param name="level"/>
	<xsl:param name="id"/>
	<!-- template code starts--><xsl:choose><xsl:when test="$level=1"><xsl:value-of select="$id"/></xsl:when><xsl:otherwise></xsl:otherwise></xsl:choose>
	<!-- template code ends-->
</xsl:template><xsl:template match="/"><Root><xsl:for-each select = "Root/Record[level=2 and not(preceding::city=city and preceding::state=state and preceding::address=address and preceding::zip=zip)]"><item><OrderTrackingID></OrderTrackingID><oDate></oDate><OrderStatus></OrderStatus><TrackingKey></TrackingKey><QuoteId></QuoteId><AltRefId></AltRefId><RouteNo></RouteNo><DriverNo></DriverNo><DriverId></DriverId><DriverFirstName></DriverFirstName><DriverLastName></DriverLastName><PickupETA></PickupETA><DeliveryETA></DeliveryETA><PSequenceNo></PSequenceNo><DSequenceNo></DSequenceNo><NextStop></NextStop><AccountNo><xsl:value-of select="&apos;Test&apos;"/></AccountNo><Service><xsl:value-of select="&apos;Scheduled&apos;"/></Service><Vehicle><xsl:value-of select="&apos;Van&apos;"/></Vehicle><VehiclePic></VehiclePic><CallerName><xsl:value-of select="&apos;OSM&apos;"/></CallerName><Department></Department><Phone></Phone><Email></Email><SpecInstr></SpecInstr><RoundTrip></RoundTrip><ClientRefNo></ClientRefNo><ClientRefNo2></ClientRefNo2><ClientRefNo3></ClientRefNo3><ClientRefNo4></ClientRefNo4><PickupAddress><AddressID></AddressID><AddrType></AddrType><Name></Name><Contact></Contact><Street></Street><Street2></Street2><City></City><State></State><Zip></Zip><RefNo></RefNo><Phone></Phone><Fax></Fax><Email></Email><SMSnumber></SMSnumber><SpecialInstr></SpecialInstr><MapCode></MapCode><TimeZoneID></TimeZoneID><TimeZoneText></TimeZoneText><LocRefNo></LocRefNo><Latitude></Latitude><Longitude></Longitude><AddOrUpdate></AddOrUpdate></PickupAddress><PLI></PLI><DeliveryAddress><AddressID></AddressID><AddrType></AddrType><Name></Name><Contact></Contact><Street><xsl:value-of select="address"/></Street><Street2></Street2><City><xsl:value-of select="city"/></City><State><xsl:value-of select="state"/></State><Zip><xsl:value-of select="zip"/></Zip><RefNo></RefNo><Phone></Phone><Fax></Fax><Email></Email><SMSnumber></SMSnumber><SpecialInstr></SpecialInstr><MapCode></MapCode><TimeZoneID></TimeZoneID><TimeZoneText></TimeZoneText><LocRefNo></LocRefNo><Latitude></Latitude><Longitude></Longitude><AddOrUpdate></AddOrUpdate></DeliveryAddress><DLI></DLI><ShipmentWeight></ShipmentWeight><DeclaredValue></DeclaredValue><CODAmount></CODAmount><OrderCharge></OrderCharge><RoundTripCharge></RoundTripCharge><MiscChargeDtl></MiscChargeDtl><MiscCharge></MiscCharge><HourlyCharge></HourlyCharge><PackageCharge></PackageCharge><WeightCharge></WeightCharge><DeclaredValueCharge></DeclaredValueCharge><CODCharge></CODCharge><AfterHoursCharge></AfterHoursCharge><WaitTimeCharge></WaitTimeCharge><StopOffCharge></StopOffCharge><TotalCharge></TotalCharge><TotalExtras></TotalExtras><WarehousingCharge></WarehousingCharge><StopOffExtras></StopOffExtras><TotalSurcharges></TotalSurcharges><Subtotal></Subtotal><Tax1Amount></Tax1Amount><Tax2Amount></Tax2Amount><TollCharge></TollCharge><OtherChg1></OtherChg1><OtherChg2></OtherChg2><GrandTotal></GrandTotal><MileageTotal></MileageTotal><POPname></POPname><PODname></PODname><pWaitTime></pWaitTime><dWaitTime></dWaitTime><Comments></Comments><DrvSubAmtFromSTD></DrvSubAmtFromSTD><DrvRoundTrip></DrvRoundTrip><PODnameRT></PODnameRT><ClientDiscountAmt></ClientDiscountAmt><ClientDiscountDrvAmt></ClientDiscountDrvAmt><OnlineDiscountAmt></OnlineDiscountAmt><OnlineDiscountDrvAmt></OnlineDiscountDrvAmt><POPsignature></POPsignature><PODsignature></PODsignature><PODsignatureRT></PODsignatureRT><PickupTargetFrom><xsl:variable  name='Hour' select = "substring-before(substring-after(etaDate ,&apos; &apos; ) , &apos;:&apos;)"/><xsl:variable  name='Min' select = "substring-before(substring-after(etaDate ,&apos;:&apos;)  ,&apos; &apos;)"/><xsl:variable  name='AmPm' select = "substring-after(substring-after(etaDate , &apos;:&apos;) , &apos; &apos;)"/><xsl:value-of select="concat(substring-before(etaDate,&apos; &apos;) ,&apos; &apos;,$Hour+05,&apos;:&apos;, $Min,&apos; &apos;,$AmPm)"/></PickupTargetFrom><PickupTargetTo><xsl:variable  name='Hour' select = "substring-before(substring-after(etaDate ,&apos; &apos; ) , &apos;:&apos;)"/><xsl:variable  name='Min' select = "substring-before(substring-after(etaDate ,&apos;:&apos;)  ,&apos; &apos;)"/><xsl:variable  name='AmPm' select = "substring-after(substring-after(etaDate , &apos;:&apos;) , &apos; &apos;)"/><xsl:value-of select="concat(substring-before(etaDate,&apos; &apos;) ,&apos; &apos;,$Hour+08,&apos;:&apos;, $Min,&apos; &apos;,$AmPm)"/></PickupTargetTo><DeliveryTargetFrom><xsl:variable  name='Hour' select = "substring-before(substring-after(etaDate ,&apos; &apos; ) , &apos;:&apos;)"/><xsl:variable  name='Min' select = "substring-before(substring-after(etaDate ,&apos;:&apos;)  ,&apos; &apos;)"/><xsl:variable  name='AmPm' select = "substring-after(substring-after(etaDate , &apos;:&apos;) , &apos; &apos;)"/><xsl:value-of select="concat(substring-before(etaDate,&apos; &apos;) ,&apos; &apos;,$Hour+05,&apos;:&apos;, $Min,&apos; &apos;,$AmPm)"/></DeliveryTargetFrom><DeliveryTargetTo><xsl:variable  name='Hour' select = "substring-before(substring-after(etaDate ,&apos; &apos; ) , &apos;:&apos;)"/><xsl:variable  name='Min' select = "substring-before(substring-after(etaDate ,&apos;:&apos;)  ,&apos; &apos;)"/><xsl:variable  name='AmPm' select = "substring-after(substring-after(etaDate , &apos;:&apos;) , &apos; &apos;)"/><xsl:value-of select="concat(substring-before(etaDate,&apos; &apos;) ,&apos; &apos;,$Hour+17,&apos;:&apos;, $Min,&apos; &apos;,$AmPm)"/></DeliveryTargetTo><PickupArrival></PickupArrival><PickupDeparture></PickupDeparture><DeliveryArrival></DeliveryArrival><DeliveryDeparture></DeliveryDeparture><PODcompletion></PODcompletion><POD_RTcompletion></POD_RTcompletion><OrderPackageItems><Leg_PD></Leg_PD><Leg_RT></Leg_RT><PackageName></PackageName><RefNo><xsl:variable  name='RefNoVar'><xsl:call-template name="RefNoTemplate"><xsl:with-param name="level" select="level"/><xsl:with-param name="id" select="id"/></xsl:call-template></xsl:variable><xsl:value-of select="$RefNoVar"/></RefNo><RefNo2></RefNo2><RefNo3></RefNo3><RefNo4></RefNo4><MasterPackageRefNo><xsl:variable  name='MasterPackageRefNo'><xsl:call-template name="MasterPackageRefNoTemplate"><xsl:with-param name="level" select="level"/><xsl:with-param name="id" select="id"/></xsl:call-template></xsl:variable><xsl:value-of select="$MasterPackageRefNo"/></MasterPackageRefNo><Weight><xsl:if test="level=2"><xsl:value-of select="weight"/></xsl:if><xsl:if test="level=2 and weight=&apos;&apos;"><xsl:value-of select="0"/></xsl:if></Weight><Length></Length><Width></Width><Height></Height><NonDeliverable></NonDeliverable><PackageScans><ScanLocation></ScanLocation><ScanDetails></ScanDetails><ScanTime></ScanTime><Damaged></Damaged><ManualScan></ManualScan></PackageScans></OrderPackageItems><OrderPackages><PackageCount></PackageCount><PackageName></PackageName></OrderPackages><AutoNotifications></AutoNotifications><ExtendedData><Text01></Text01><Text02></Text02><Text03></Text03><Text04></Text04><Text05></Text05><Decimal01></Decimal01><Decimal02></Decimal02><Decimal03></Decimal03><Decimal04></Decimal04><Decimal05></Decimal05><DateTime01></DateTime01><DateTime02></DateTime02><DateTime03></DateTime03><DateTime04></DateTime04><DateTime05></DateTime05><Boolean01></Boolean01><Boolean02></Boolean02><Boolean03></Boolean03><Boolean04></Boolean04><Boolean05></Boolean05><Int01></Int01><Int02></Int02><Int03></Int03><Int04></Int04><Int05></Int05></ExtendedData><LastGPS><Lat></Lat><Long></Long><aTimeStamp></aTimeStamp><ServerTimeStamp></ServerTimeStamp></LastGPS><CreditCard></CreditCard><HasPOPsignature></HasPOPsignature><HasPODsignature></HasPODsignature><HasPODRTsignature></HasPODRTsignature><HasVPOP></HasVPOP><HasVPOD></HasVPOD><HasVPODRT></HasVPODRT><HasPLI></HasPLI><HasDLI></HasDLI></item></xsl:for-each></Root></xsl:template></xsl:stylesheet>]]></au_xslFile>
        <au_characterSetEncoding><![CDATA[UTF-8]]></au_characterSetEncoding>
        <au_splitFile><![CDATA[0]]></au_splitFile>
        <au_storedProcedure><![CDATA[]]></au_storedProcedure>
        <au_entityName><![CDATA[Hackbarth_Mainfest_AXIS_Map]]></au_entityName>
        <au_synchronized><![CDATA[0]]></au_synchronized>
        <au_valueMap><![CDATA[<ValueMap/>]]></au_valueMap>
        <au_activeVersion><![CDATA[1]]></au_activeVersion>
        <au_userOwner><![CDATA[IndigoUser:11681186927216]]></au_userOwner>
        <au_metadata><![CDATA[]]></au_metadata>
        <au_concurrentProcessors><![CDATA[1]]></au_concurrentProcessors>
        <au_xslTransformer><![CDATA[Saxon]]></au_xslTransformer>
        <au_groupOwner><![CDATA[IndigoGroup:192168001075148181566048300002]]></au_groupOwner>
        <au_pdfFileName><![CDATA[Adp_Map_Rules2730029271758679244.pdf]]></au_pdfFileName>
        <au_modifiedDate><![CDATA[2023-04-23T12:41:06]]></au_modifiedDate>
        <au_json><![CDATA[{"json":{"category":"mapping","type":"mapping","encoding":"UTF-8","version":"1.0"},"cloneElements":"","filters":"","variables":{"variable":[]},"globalParameters":{"keys":{"key":[]},"contextVariables":{"contextVariable":[]}},"connections":{"connectionVariable":[]},"functions":{"externalFunction":[]},"filterUnmappedElements":false,"indentOutputXML":true,"xslVersion":"1.1","enableStreaming":false,"filterEmptyElements":false,"xslTransformer":"Saxon","characterSetEncoding":"UTF-8","DataViewerRecordCount":50,"dbQueryCaching":false,"isQuickSplittingEnabled":false,"TreeExpandLevelCountForWebService":5,"TreeExpandLevelForEasySchemaExtensions":10,"SelfRecursionLevel":0,"EnableTypesBuffering":true,"TreeExpandLevelCount":3,"onDemandLoadingOfXMLSchemaTree":true,"settingConfigs":{"xslVersion":"1.1","xslTransformer":"Saxon","filterUnmappedElements":false,"indentOutputXML":true,"filterEmptyElements":false,"enableStreaming":false,"characterSetEncoding":"UTF-8","DataViewerRecordCount":50,"dbQueryCaching":false,"isQuickSplittingEnabled":false,"TreeExpandLevelCountForWebService":5,"TreeExpandLevelForEasySchemaExtensions":10,"SelfRecursionLevel":0,"EnableTypesBuffering":true,"TreeExpandLevelCount":3,"onDemandLoadingOfXMLSchemaTree":true,"cDataSectionElements":"","excludeResultPrefixes":"saxonJavaMappingTransformation saxonJavaMapperQueryExecutor saxonJavaAggregateFunctionHandler str","cacheIncludedSchemas":false,"processElementFormDefault":true,"isAutoSaveEnable":true},"disableOuputNodes":{"disableOutputNodeProperty":[]},"isCustomXSLT":false,"contextSchemaLoadedAtSource":false,"contextSchemaLoadedAtTarget":false,"webservice":{"consumers":{"consumer":[]}},"GlobalPreCustomXSL":"","GlobalPostCustomXSL":"","xslTemplates":{"xslTemplateData":[{"name":"RefNoTemplate","oldName":null,"templateRuleType":"MappingRule","accessLevel":"Local","xslTemplate":"<xsl:template name=\"RefNoTemplate\">\n\t<xsl:param name=\"level\"/>\n\t<xsl:param name=\"id\"/>\n\t<!-- template code starts-->\n\t\n\t<!-- template code ends-->\n<\/xsl:template>","mappingRule":"\nWHEN CONDITION{$level=2} VALUE=[$id ] OTHERWISE VALUE=[ ]\n","selectedTab":1,"projectId":"Project:11682064708376","tabRenderingSuccess":true,"paramsList":["level","id"],"prevProjectId":null,"xslTransformer":"Saxon","xslVersion":"1.1","excludeResultPrefixes":"saxonJavaMappingTransformation saxonJavaMapperQueryExecutor saxonJavaAggregateFunctionHandler str","namespace":"","characterSetEncoding":"UTF-8"},{"name":"MasterPackageRefNoTemplate","oldName":"MasterPackageRefNoTemplate","templateRuleType":"MappingRule","xslTemplate":"<xsl:template name=\"MasterPackageRefNoTemplate\">\n\t<!-- template code starts-->\n\t\n\t<!-- template code ends-->\n<\/xsl:template>","mappingRule":"\nWHEN CONDITION{$level=1} VALUE=[$id ] OTHERWISE VALUE=[ ]\n","selectedTab":0,"projectId":null,"tabRenderingSuccess":true,"paramsList":["level","id"],"accessLevel":"Local","prevProjectId":null,"xslTransformer":"Saxon","xslVersion":"1.1","excludeResultPrefixes":"saxonJavaMappingTransformation saxonJavaMapperQueryExecutor saxonJavaAggregateFunctionHandler str","namespace":"","characterSetEncoding":"UTF-8"}]},"mappingTempId":1682233594865,"sourceXpath":"","targetXpath":"","cDataSectionElements":"","splittingData":false,"splitNumberOfRecords":"500","parallelProcessing":false,"maximumConcurrentProcessor":"1","CustomAutoMapInUse":"","excludeResultPrefixes":"saxonJavaMappingTransformation saxonJavaMapperQueryExecutor saxonJavaAggregateFunctionHandler str","cacheIncludedSchemas":false,"metaData":"","processElementFormDefault":true,"mappingInformation":{"mappingVersion":"6.1","mappingName":"Hackbarth_Mainfest_AXIS_Map","mappingProject":"Project:11682064708376","mappingDescription":"Hackbarth","sourceSchemaID":"TextSchema:192168029225168223253030100006","targetSchemaID":"JSONSchema:192168029225168223258580900009","mappingOwnerGroup":"","mappingOwner":"","mappingLastModifiedBy":"","mappingCreationDate":"","mappingModifiedDate":"","reusable":null},"namespace":"","namespaceList":[],"foreach":"","targetRoots":{"targetRoot":[{"name":"Root","schemaName":"HB_Json_Axis_Layout_RR","schemaID":"JSONSchema:192168029225168223258580900009","stream":"output_1"}]},"sourceRoots":{"sourceRoot":[{"name":"Root","schemaName":"HB_CSV_Itemized_Layout_RR","schemaID":"TextSchema:192168029225168223253030100006"}]},"contextSchemaDefinition":"","maps":[{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"item","targetfieldpath":"/Root/item","targetrecord":"Root","mapping":[],"markComplete":false,"mapId":"Map-1","confidence":"","foreachPath":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record[level=2 and not(preceding::city=city and preceding::state=state and preceding::address=address and preceding::zip=zip)]"},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"AccountNo","targetfieldpath":"/Root/item/AccountNo","targetrecord":"item","mapping":[],"markComplete":false,"mapId":"Map-2","expressionNote":"","expression":"'Test'","expressionPath":"'Test'","defaultEditor":"textual","confidence":""},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"Service","targetfieldpath":"/Root/item/Service","targetrecord":"item","mapping":[],"markComplete":false,"mapId":"Map-3","expressionNote":"","expression":"'Scheduled'","expressionPath":"'Scheduled'","defaultEditor":"textual","confidence":""},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"Vehicle","targetfieldpath":"/Root/item/Vehicle","targetrecord":"item","mapping":[],"markComplete":false,"mapId":"Map-4","expressionNote":"","expression":"'Van'","expressionPath":"'Van'","defaultEditor":"textual","confidence":""},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"CallerName","targetfieldpath":"/Root/item/CallerName","targetrecord":"item","mapping":[],"markComplete":false,"mapId":"Map-5","expressionNote":"","expression":"'OSM'","expressionPath":"'OSM'","defaultEditor":"textual","confidence":""},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"Street","targetfieldpath":"/Root/item/DeliveryAddress/Street","defaultEditor":"graphical","graphicalMappingJson":[{"elementId":"GraphicalElement-ext-1682233003800","elementItem":{"elementType":"SourceElement","name":"address","expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/address","paramsCount":0,"syntax":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/address"},"elementPos":[1600,1520],"nextElementIds":["GraphicalElement-ext-1682233003801_IncomingElement-1"],"nextGraphicalElementIds":["GraphicalElement-ext-1682233003801"],"previousElementIds":[]},{"elementId":"GraphicalElement-ext-1682233003801","elementItem":{"elementType":"TargetElement","name":"Street","expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/address","paramsCount":1,"syntax":"HB_Json_Axis_Layout_RR/Root/item/DeliveryAddress/Street"},"elementPos":[1800,1520],"nextElementIds":[],"nextGraphicalElementIds":[],"previousElementIds":["GraphicalElement-ext-1682233003800"]}],"expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/address","targetrecord":"DeliveryAddress","mapping":[{"sourceName":"HB_CSV_Itemized_Layout_RR","operatortype":"field","sourcefield":"address","sourcefielddisplayname":"address","sourcefieldpath":"/Root/Record/address","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-6"},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"City","targetfieldpath":"/Root/item/DeliveryAddress/City","defaultEditor":"graphical","graphicalMappingJson":[{"elementId":"GraphicalElement-ext-1682233005806","elementItem":{"elementType":"SourceElement","name":"city","expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/city","paramsCount":0,"syntax":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/city"},"elementPos":[1600,1520],"nextElementIds":["GraphicalElement-ext-1682233005808_IncomingElement-1"],"nextGraphicalElementIds":["GraphicalElement-ext-1682233005808"],"previousElementIds":[]},{"elementId":"GraphicalElement-ext-1682233005808","elementItem":{"elementType":"TargetElement","name":"City","expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/city","paramsCount":1,"syntax":"HB_Json_Axis_Layout_RR/Root/item/DeliveryAddress/City"},"elementPos":[1800,1520],"nextElementIds":[],"nextGraphicalElementIds":[],"previousElementIds":["GraphicalElement-ext-1682233005806"]}],"expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/city","targetrecord":"DeliveryAddress","mapping":[{"sourceName":"HB_CSV_Itemized_Layout_RR","operatortype":"field","sourcefield":"city","sourcefielddisplayname":"city","sourcefieldpath":"/Root/Record/city","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-7"},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"State","targetfieldpath":"/Root/item/DeliveryAddress/State","defaultEditor":"graphical","graphicalMappingJson":[{"elementId":"GraphicalElement-ext-1682233007615","elementItem":{"elementType":"SourceElement","name":"state","expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/state","paramsCount":0,"syntax":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/state"},"elementPos":[1600,1520],"nextElementIds":["GraphicalElement-ext-1682233007616_IncomingElement-1"],"nextGraphicalElementIds":["GraphicalElement-ext-1682233007616"],"previousElementIds":[]},{"elementId":"GraphicalElement-ext-1682233007616","elementItem":{"elementType":"TargetElement","name":"State","expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/state","paramsCount":1,"syntax":"HB_Json_Axis_Layout_RR/Root/item/DeliveryAddress/State"},"elementPos":[1800,1520],"nextElementIds":[],"nextGraphicalElementIds":[],"previousElementIds":["GraphicalElement-ext-1682233007615"]}],"expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/state","targetrecord":"DeliveryAddress","mapping":[{"sourceName":"HB_CSV_Itemized_Layout_RR","operatortype":"field","sourcefield":"state","sourcefielddisplayname":"state","sourcefieldpath":"/Root/Record/state","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-8"},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"Zip","targetfieldpath":"/Root/item/DeliveryAddress/Zip","defaultEditor":"graphical","graphicalMappingJson":[{"elementId":"GraphicalElement-ext-1682233009248","elementItem":{"elementType":"SourceElement","name":"zip","expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/zip","paramsCount":0,"syntax":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/zip"},"elementPos":[1600,1520],"nextElementIds":["GraphicalElement-ext-1682233009249_IncomingElement-1"],"nextGraphicalElementIds":["GraphicalElement-ext-1682233009249"],"previousElementIds":[]},{"elementId":"GraphicalElement-ext-1682233009249","elementItem":{"elementType":"TargetElement","name":"Zip","expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/zip","paramsCount":1,"syntax":"HB_Json_Axis_Layout_RR/Root/item/DeliveryAddress/Zip"},"elementPos":[1800,1520],"nextElementIds":[],"nextGraphicalElementIds":[],"previousElementIds":["GraphicalElement-ext-1682233009248"]}],"expression":"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/zip","targetrecord":"DeliveryAddress","mapping":[{"sourceName":"HB_CSV_Itemized_Layout_RR","operatortype":"field","sourcefield":"zip","sourcefielddisplayname":"zip","sourcefieldpath":"/Root/Record/zip","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-9"},{"order":1,"targetfield":"RefNo","targetfieldpath":"/Root/item/OrderPackageItems/RefNo","targetrecord":"OrderPackageItems","targetName":"HB_Json_Axis_Layout_RR","mapping":[],"markComplete":false,"mapId":"Map-10","localVariables":{"localVariable":[{"lname":"RefNoVar","lvalue":"CALL TEMPLATE NAME=\"RefNoTemplate\" level~1=\"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level\" id~2=\"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/id\"","lcomment":""}]},"defaultEditor":"textual","graphicalMappingJson":[],"expressionNote":"","expression":"$RefNoVar","expressionPath":"$RefNoVar","confidence":""},{"order":1,"targetfield":"MasterPackageRefNo","targetfieldpath":"/Root/item/OrderPackageItems/MasterPackageRefNo","targetrecord":"OrderPackageItems","targetName":"HB_Json_Axis_Layout_RR","mapping":[],"markComplete":false,"mapId":"Map-11","localVariables":{"localVariable":[{"lname":"MasterPackageRefNo","lvalue":"CALL TEMPLATE NAME=\"MasterPackageRefNoTemplate\" level~1=\"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level\" id~2=\"$Input_HB_CSV_Itemized_Layout_RR/Root/Record/id\"","lcomment":""}]},"defaultEditor":"textual","graphicalMappingJson":[],"expressionNote":"","expression":"$MasterPackageRefNo","expressionPath":"$MasterPackageRefNo","confidence":""},{"order":1,"targetfield":"PickupTargetFrom","targetfieldpath":"/Root/item/PickupTargetFrom","targetrecord":"item","targetName":"HB_Json_Axis_Layout_RR","mapping":[{"sourceName":"","operatortype":"field","sourcefield":"etaDate","sourcefielddisplayname":"etaDate","sourcefieldpath":"/Root/Record/etaDate","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-13","localVariables":{"localVariable":[{"lname":"Hour","lvalue":"substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,' ' ) , ':')","lcomment":""},{"lname":"Min","lvalue":"substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,':')  ,' ')","lcomment":""},{"lname":"AmPm","lvalue":"substring-after(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate , ':') , ' ')","lcomment":""}]},"defaultEditor":"textual","graphicalMappingJson":[],"expressionNote":"","expression":"concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+05,':', $Min,' ',$AmPm)","expressionPath":"concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+05,':', $Min,' ',$AmPm)","confidence":""},{"order":1,"targetfield":"DeliveryTargetFrom","targetfieldpath":"/Root/item/DeliveryTargetFrom","targetrecord":"item","targetName":"HB_Json_Axis_Layout_RR","mapping":[{"sourceName":"","operatortype":"field","sourcefield":"etaDate","sourcefielddisplayname":"etaDate","sourcefieldpath":"/Root/Record/etaDate","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-15","localVariables":{"localVariable":[{"lname":"Hour","lvalue":"substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,' ' ) , ':')","lcomment":""},{"lname":"Min","lvalue":"substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,':')  ,' ')","lcomment":""},{"lname":"AmPm","lvalue":"substring-after(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate , ':') , ' ')","lcomment":""}]},"defaultEditor":"textual","graphicalMappingJson":[],"expressionNote":"","expression":"concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+05,':', $Min,' ',$AmPm)","expressionPath":"concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+05,':', $Min,' ',$AmPm)","confidence":""},{"order":1,"targetfield":"PickupTargetTo","targetfieldpath":"/Root/item/PickupTargetTo","targetrecord":"item","targetName":"HB_Json_Axis_Layout_RR","mapping":[{"sourceName":"","operatortype":"field","sourcefield":"etaDate","sourcefielddisplayname":"etaDate","sourcefieldpath":"/Root/Record/etaDate","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-14","localVariables":{"localVariable":[{"lname":"Hour","lvalue":"substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,' ' ) , ':')","lcomment":""},{"lname":"Min","lvalue":"substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,':')  ,' ')","lcomment":""},{"lname":"AmPm","lvalue":"substring-after(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate , ':') , ' ')","lcomment":""}]},"defaultEditor":"textual","graphicalMappingJson":[],"expressionNote":"","expression":"concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+08,':', $Min,' ',$AmPm)","expressionPath":"concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+08,':', $Min,' ',$AmPm)","confidence":""},{"order":1,"targetfield":"DeliveryTargetTo","targetfieldpath":"/Root/item/DeliveryTargetTo","targetrecord":"item","targetName":"HB_Json_Axis_Layout_RR","mapping":[{"sourceName":"","operatortype":"field","sourcefield":"etaDate","sourcefielddisplayname":"etaDate","sourcefieldpath":"/Root/Record/etaDate","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-16","localVariables":{"localVariable":[{"lname":"Hour","lvalue":"substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,' ' ) , ':')","lcomment":""},{"lname":"Min","lvalue":"substring-before(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate ,':')  ,' ')","lcomment":""},{"lname":"AmPm","lvalue":"substring-after(substring-after($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate , ':') , ' ')","lcomment":""}]},"defaultEditor":"textual","graphicalMappingJson":[],"expressionNote":"","expression":"concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+17,':', $Min,' ',$AmPm)","expressionPath":"concat(substring-before($Input_HB_CSV_Itemized_Layout_RR/Root/Record/etaDate,' ') ,' ',$Hour+17,':', $Min,' ',$AmPm)","confidence":""},{"order":1,"targetName":"HB_Json_Axis_Layout_RR","targetfield":"Weight","targetfieldpath":"/Root/item/OrderPackageItems/Weight","targetrecord":"OrderPackageItems","mapping":[{"sourceName":"","operatortype":"field","sourcefield":"level","sourcefielddisplayname":"level","sourcefieldpath":"/Root/Record/level","sourcerecord":"Record"},{"sourceName":"","operatortype":"field","sourcefield":"weight","sourcefielddisplayname":"weight","sourcefieldpath":"/Root/Record/weight","sourcerecord":"Record"}],"markComplete":false,"mapId":"Map-12","expressionNote":"","expression":"IF CONDITION{$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level=2} VALUE=[$Input_HB_CSV_Itemized_Layout_RR/Root/Record/weight]\nIF CONDITION{$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level=2 and $Input_HB_CSV_Itemized_Layout_RR/Root/Record/weight='' } VALUE=[ 0]","expressionPath":"IF CONDITION{$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level=2} VALUE=[$Input_HB_CSV_Itemized_Layout_RR/Root/Record/weight]\nIF CONDITION{$Input_HB_CSV_Itemized_Layout_RR/Root/Record/level=2 and $Input_HB_CSV_Itemized_Layout_RR/Root/Record/weight='' } VALUE=[ 0]","defaultEditor":"textual","confidence":""}],"sourceExpandLevel":3,"targetExpandLevel":3}]]></au_json>
        <au_projectOwner><![CDATA[Project:11682064708376]]></au_projectOwner>
        <au_modifiedBy><![CDATA[IndigoUser:11681186927216]]></au_modifiedBy>
        <au_xslTemplate><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<XslTemplate>
<global>
<Name>RefNoTemplate</Name>
<Name>MasterPackageRefNoTemplate</Name>
</global>
</XslTemplate>]]></au_xslTemplate>
        <au_description><![CDATA[Hackbarth]]></au_description>
        <au_aimapTrained><![CDATA[0]]></au_aimapTrained>
        <au_aimapFreeze><![CDATA[0]]></au_aimapFreeze>
        <au_creationDate><![CDATA[2023-04-23T12:26:18]]></au_creationDate>
        <au_targetSchema><![CDATA[JSONSchema:192168029225168223258580900009]]></au_targetSchema>
        <au_customAutoMap><![CDATA[]]></au_customAutoMap>
        <au_dbInfoName><![CDATA[]]></au_dbInfoName>
        <au_id><![CDATA[192168029225168223297847900013]]></au_id>
        <au_permissionMask><![CDATA[770]]></au_permissionMask>
        <au_parallelProcessing><![CDATA[0]]></au_parallelProcessing>
        <au_version><![CDATA[1]]></au_version>
        <au_numberOfRecords><![CDATA[500]]></au_numberOfRecords>
        <au_revision><![CDATA[null]]></au_revision>
    </AU_MAPPINGTRANSFORMATION>
    <columnInfo dbtype="4">
        <column name="au_id" type="12"/>
        <column name="au_version" type="12"/>
        <column name="au_previousVersion" type="12"/>
        <column name="au_activeVersion" type="3"/>
        <column name="au_entityName" type="12"/>
        <column name="au_userOwner" type="12"/>
        <column name="au_groupOwner" type="12"/>
        <column name="au_permissionMask" type="12"/>
        <column name="au_description" type="12"/>
        <column name="au_comments" type="12"/>
        <column name="au_modifiedBy" type="12"/>
        <column name="au_creationDate" type="93"/>
        <column name="au_modifiedDate" type="93"/>
        <column name="au_revision" type="12"/>
        <column name="au_synchronized" type="3"/>
        <column name="au_projectOwner" type="12"/>
        <column name="au_persistDataEnabled" type="3"/>
        <column name="au_splitFile" type="3"/>
        <column name="au_numberOfRecords" type="4"/>
        <column name="au_optimizedLoading" type="3"/>
        <column name="au_sourceSchema" type="12"/>
        <column name="au_targetSchema" type="12"/>
        <column name="au_xslFile" type="-1"/>
        <column name="au_metadata" type="12"/>
        <column name="au_mapXmlFile" type="-1"/>
        <column name="au_json" type="-1"/>
        <column name="au_pdfFileName" type="12"/>
        <column name="au_parallelProcessing" type="3"/>
        <column name="au_concurrentProcessors" type="4"/>
        <column name="au_dbInfoName" type="12"/>
        <column name="au_customAutoMap" type="-1"/>
        <column name="au_valueMap" type="-1"/>
        <column name="au_xslTemplate" type="-1"/>
        <column name="au_storedProcedure" type="-1"/>
        <column name="au_xslTransformer" type="12"/>
        <column name="au_characterSetEncoding" type="12"/>
        <column name="au_enableAIMap" type="3"/>
        <column name="AU_REUSABLE" type="3"/>
        <column name="au_aimapFreeze" type="3"/>
        <column name="au_aimapTrained" type="3"/>
    </columnInfo>
</data>
